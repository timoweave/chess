import{r as l,a as Qe}from"./index-c013ead5.js";var Be={exports:{}},F={};/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Xe=l,Ze=Symbol.for("react.element"),et=Symbol.for("react.fragment"),tt=Object.prototype.hasOwnProperty,rt=Xe.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,nt={key:!0,ref:!0,__self:!0,__source:!0};function Ue(e,t,r){var n,a={},i=null,s=null;r!==void 0&&(i=""+r),t.key!==void 0&&(i=""+t.key),t.ref!==void 0&&(s=t.ref);for(n in t)tt.call(t,n)&&!nt.hasOwnProperty(n)&&(a[n]=t[n]);if(e&&e.defaultProps)for(n in t=e.defaultProps,t)a[n]===void 0&&(a[n]=t[n]);return{$$typeof:Ze,type:e,key:i,ref:s,props:a,_owner:rt.current}}F.Fragment=et;F.jsx=Ue;F.jsxs=Ue;Be.exports=F;var d=Be.exports;/**
 * @remix-run/router v1.7.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function N(){return N=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},N.apply(this,arguments)}var V;(function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"})(V||(V={}));const Re="popstate";function at(e){e===void 0&&(e={});function t(n,a){let{pathname:i,search:s,hash:o}=n.location;return Q("",{pathname:i,search:s,hash:o},a.state&&a.state.usr||null,a.state&&a.state.key||"default")}function r(n,a){return typeof a=="string"?a:Oe(a)}return st(t,r,null,e)}function S(e,t){if(e===!1||e===null||typeof e>"u")throw new Error(t)}function ve(e,t){if(!e){typeof console<"u"&&console.warn(t);try{throw new Error(t)}catch{}}}function it(){return Math.random().toString(36).substr(2,8)}function Ae(e,t){return{usr:e.state,key:e.key,idx:t}}function Q(e,t,r,n){return r===void 0&&(r=null),N({pathname:typeof e=="string"?e:e.pathname,search:"",hash:""},typeof t=="string"?C(t):t,{state:r,key:t&&t.key||n||it()})}function Oe(e){let{pathname:t="/",search:r="",hash:n=""}=e;return r&&r!=="?"&&(t+=r.charAt(0)==="?"?r:"?"+r),n&&n!=="#"&&(t+=n.charAt(0)==="#"?n:"#"+n),t}function C(e){let t={};if(e){let r=e.indexOf("#");r>=0&&(t.hash=e.substr(r),e=e.substr(0,r));let n=e.indexOf("?");n>=0&&(t.search=e.substr(n),e=e.substr(0,n)),e&&(t.pathname=e)}return t}function st(e,t,r,n){n===void 0&&(n={});let{window:a=document.defaultView,v5Compat:i=!1}=n,s=a.history,o=V.Pop,u=null,c=p();c==null&&(c=0,s.replaceState(N({},s.state,{idx:c}),""));function p(){return(s.state||{idx:null}).idx}function h(){o=V.Pop;let g=p(),b=g==null?null:g-c;c=g,u&&u({action:o,location:m.location,delta:b})}function y(g,b){o=V.Push;let v=Q(m.location,g,b);r&&r(v,g),c=p()+1;let R=Ae(v,c),w=m.createHref(v);try{s.pushState(R,"",w)}catch(_){if(_ instanceof DOMException&&_.name==="DataCloneError")throw _;a.location.assign(w)}i&&u&&u({action:o,location:m.location,delta:1})}function f(g,b){o=V.Replace;let v=Q(m.location,g,b);r&&r(v,g),c=p();let R=Ae(v,c),w=m.createHref(v);s.replaceState(R,"",w),i&&u&&u({action:o,location:m.location,delta:0})}function x(g){let b=a.location.origin!=="null"?a.location.origin:a.location.href,v=typeof g=="string"?g:Oe(g);return S(b,"No window.location.(origin|href) available to create URL for href: "+v),new URL(v,b)}let m={get action(){return o},get location(){return e(a,s)},listen(g){if(u)throw new Error("A history only accepts one active listener");return a.addEventListener(Re,h),u=g,()=>{a.removeEventListener(Re,h),u=null}},createHref(g){return t(a,g)},createURL:x,encodeLocation(g){let b=x(g);return{pathname:b.pathname,search:b.search,hash:b.hash}},push:y,replace:f,go(g){return s.go(g)}};return m}var Ee;(function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"})(Ee||(Ee={}));function ot(e,t,r){r===void 0&&(r="/");let n=typeof t=="string"?C(t):t,a=He(n.pathname||"/",r);if(a==null)return null;let i=Fe(e);lt(i);let s=null;for(let o=0;s==null&&o<i.length;++o)s=bt(i[o],xt(a));return s}function Fe(e,t,r,n){t===void 0&&(t=[]),r===void 0&&(r=[]),n===void 0&&(n="");let a=(i,s,o)=>{let u={relativePath:o===void 0?i.path||"":o,caseSensitive:i.caseSensitive===!0,childrenIndex:s,route:i};u.relativePath.startsWith("/")&&(S(u.relativePath.startsWith(n),'Absolute route path "'+u.relativePath+'" nested under path '+('"'+n+'" is not valid. An absolute child route path ')+"must start with the combined path of all its parent routes."),u.relativePath=u.relativePath.slice(n.length));let c=T([n,u.relativePath]),p=r.concat(u);i.children&&i.children.length>0&&(S(i.index!==!0,"Index routes must not have child routes. Please remove "+('all child routes from route path "'+c+'".')),Fe(i.children,t,p,c)),!(i.path==null&&!i.index)&&t.push({path:c,score:gt(c,i.index),routesMeta:p})};return e.forEach((i,s)=>{var o;if(i.path===""||!((o=i.path)!=null&&o.includes("?")))a(i,s);else for(let u of De(i.path))a(i,s,u)}),t}function De(e){let t=e.split("/");if(t.length===0)return[];let[r,...n]=t,a=r.endsWith("?"),i=r.replace(/\?$/,"");if(n.length===0)return a?[i,""]:[i];let s=De(n.join("/")),o=[];return o.push(...s.map(u=>u===""?i:[i,u].join("/"))),a&&o.push(...s),o.map(u=>e.startsWith("/")&&u===""?"/":u)}function lt(e){e.sort((t,r)=>t.score!==r.score?r.score-t.score:ft(t.routesMeta.map(n=>n.childrenIndex),r.routesMeta.map(n=>n.childrenIndex)))}const ut=/^:\w+$/,ct=3,dt=2,pt=1,ht=10,mt=-2,Ce=e=>e==="*";function gt(e,t){let r=e.split("/"),n=r.length;return r.some(Ce)&&(n+=mt),t&&(n+=dt),r.filter(a=>!Ce(a)).reduce((a,i)=>a+(ut.test(i)?ct:i===""?pt:ht),n)}function ft(e,t){return e.length===t.length&&e.slice(0,-1).every((n,a)=>n===t[a])?e[e.length-1]-t[t.length-1]:0}function bt(e,t){let{routesMeta:r}=e,n={},a="/",i=[];for(let s=0;s<r.length;++s){let o=r[s],u=s===r.length-1,c=a==="/"?t:t.slice(a.length)||"/",p=yt({path:o.relativePath,caseSensitive:o.caseSensitive,end:u},c);if(!p)return null;Object.assign(n,p.params);let h=o.route;i.push({params:n,pathname:T([a,p.pathname]),pathnameBase:Rt(T([a,p.pathnameBase])),route:h}),p.pathnameBase!=="/"&&(a=T([a,p.pathnameBase]))}return i}function yt(e,t){typeof e=="string"&&(e={path:e,caseSensitive:!1,end:!0});let[r,n]=St(e.path,e.caseSensitive,e.end),a=t.match(r);if(!a)return null;let i=a[0],s=i.replace(/(.)\/+$/,"$1"),o=a.slice(1);return{params:n.reduce((c,p,h)=>{if(p==="*"){let y=o[h]||"";s=i.slice(0,i.length-y.length).replace(/(.)\/+$/,"$1")}return c[p]=vt(o[h]||"",p),c},{}),pathname:i,pathnameBase:s,pattern:e}}function St(e,t,r){t===void 0&&(t=!1),r===void 0&&(r=!0),ve(e==="*"||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were '+('"'+e.replace(/\*$/,"/*")+'" because the `*` character must ')+"always follow a `/` in the pattern. To get rid of this warning, "+('please change the route path to "'+e.replace(/\*$/,"/*")+'".'));let n=[],a="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/\/:(\w+)/g,(s,o)=>(n.push(o),"/([^\\/]+)"));return e.endsWith("*")?(n.push("*"),a+=e==="*"||e==="/*"?"(.*)$":"(?:\\/(.+)|\\/*)$"):r?a+="\\/*$":e!==""&&e!=="/"&&(a+="(?:(?=\\/|$))"),[new RegExp(a,t?void 0:"i"),n]}function xt(e){try{return decodeURI(e)}catch(t){return ve(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent '+("encoding ("+t+").")),e}}function vt(e,t){try{return decodeURIComponent(e)}catch(r){return ve(!1,'The value for the URL param "'+t+'" will not be decoded because'+(' the string "'+e+'" is a malformed URL segment. This is probably')+(" due to a bad percent encoding ("+r+").")),e}}function He(e,t){if(t==="/")return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let r=t.endsWith("/")?t.length-1:t.length,n=e.charAt(r);return n&&n!=="/"?null:e.slice(r)||"/"}function _t(e,t){t===void 0&&(t="/");let{pathname:r,search:n="",hash:a=""}=typeof e=="string"?C(e):e;return{pathname:r?r.startsWith("/")?r:Vt(r,t):t,search:At(n),hash:Et(a)}}function Vt(e,t){let r=t.replace(/\/+$/,"").split("/");return e.split("/").forEach(a=>{a===".."?r.length>1&&r.pop():a!=="."&&r.push(a)}),r.length>1?r.join("/"):"/"}function Y(e,t,r,n){return"Cannot include a '"+e+"' character in a manually specified "+("`to."+t+"` field ["+JSON.stringify(n)+"].  Please separate it out to the ")+("`to."+r+"` field. Alternatively you may provide the full path as ")+'a string in <Link to="..."> and the router will parse it for you.'}function wt(e){return e.filter((t,r)=>r===0||t.route.path&&t.route.path.length>0)}function Tt(e,t,r,n){n===void 0&&(n=!1);let a;typeof e=="string"?a=C(e):(a=N({},e),S(!a.pathname||!a.pathname.includes("?"),Y("?","pathname","search",a)),S(!a.pathname||!a.pathname.includes("#"),Y("#","pathname","hash",a)),S(!a.search||!a.search.includes("#"),Y("#","search","hash",a)));let i=e===""||a.pathname==="",s=i?"/":a.pathname,o;if(n||s==null)o=r;else{let h=t.length-1;if(s.startsWith("..")){let y=s.split("/");for(;y[0]==="..";)y.shift(),h-=1;a.pathname=y.join("/")}o=h>=0?t[h]:"/"}let u=_t(a,o),c=s&&s!=="/"&&s.endsWith("/"),p=(i||s===".")&&r.endsWith("/");return!u.pathname.endsWith("/")&&(c||p)&&(u.pathname+="/"),u}const T=e=>e.join("/").replace(/\/\/+/g,"/"),Rt=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),At=e=>!e||e==="?"?"":e.startsWith("?")?e:"?"+e,Et=e=>!e||e==="#"?"":e.startsWith("#")?e:"#"+e;function Ct(e){return e!=null&&typeof e.status=="number"&&typeof e.statusText=="string"&&typeof e.internal=="boolean"&&"data"in e}const $e=["post","put","patch","delete"];new Set($e);const qt=["get",...$e];new Set(qt);/**
 * React Router v6.14.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function B(){return B=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},B.apply(this,arguments)}const _e=l.createContext(null),It=l.createContext(null),D=l.createContext(null),H=l.createContext(null),q=l.createContext({outlet:null,matches:[],isDataRoute:!1}),Ke=l.createContext(null);function $(){return l.useContext(H)!=null}function Ve(){return $()||S(!1),l.useContext(H).location}function We(e){l.useContext(D).static||l.useLayoutEffect(e)}function K(){let{isDataRoute:e}=l.useContext(q);return e?Ht():Nt()}function Nt(){$()||S(!1);let e=l.useContext(_e),{basename:t,navigator:r}=l.useContext(D),{matches:n}=l.useContext(q),{pathname:a}=Ve(),i=JSON.stringify(wt(n).map(u=>u.pathnameBase)),s=l.useRef(!1);return We(()=>{s.current=!0}),l.useCallback(function(u,c){if(c===void 0&&(c={}),!s.current)return;if(typeof u=="number"){r.go(u);return}let p=Tt(u,JSON.parse(i),a,c.relative==="path");e==null&&t!=="/"&&(p.pathname=p.pathname==="/"?t:T([t,p.pathname])),(c.replace?r.replace:r.push)(p,c.state,c)},[t,r,i,a,e])}function Lt(e,t){return Pt(e,t)}function Pt(e,t,r){$()||S(!1);let{navigator:n}=l.useContext(D),{matches:a}=l.useContext(q),i=a[a.length-1],s=i?i.params:{};i&&i.pathname;let o=i?i.pathnameBase:"/";i&&i.route;let u=Ve(),c;if(t){var p;let m=typeof t=="string"?C(t):t;o==="/"||(p=m.pathname)!=null&&p.startsWith(o)||S(!1),c=m}else c=u;let h=c.pathname||"/",y=o==="/"?h:h.slice(o.length)||"/",f=ot(e,{pathname:y}),x=Bt(f&&f.map(m=>Object.assign({},m,{params:Object.assign({},s,m.params),pathname:T([o,n.encodeLocation?n.encodeLocation(m.pathname).pathname:m.pathname]),pathnameBase:m.pathnameBase==="/"?o:T([o,n.encodeLocation?n.encodeLocation(m.pathnameBase).pathname:m.pathnameBase])})),a,r);return t&&x?l.createElement(H.Provider,{value:{location:B({pathname:"/",search:"",hash:"",state:null,key:"default"},c),navigationType:V.Pop}},x):x}function jt(){let e=Dt(),t=Ct(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),r=e instanceof Error?e.stack:null,a={padding:"0.5rem",backgroundColor:"rgba(200,200,200, 0.5)"},i=null;return l.createElement(l.Fragment,null,l.createElement("h2",null,"Unexpected Application Error!"),l.createElement("h3",{style:{fontStyle:"italic"}},t),r?l.createElement("pre",{style:a},r):null,i)}const kt=l.createElement(jt,null);class Mt extends l.Component{constructor(t){super(t),this.state={location:t.location,revalidation:t.revalidation,error:t.error}}static getDerivedStateFromError(t){return{error:t}}static getDerivedStateFromProps(t,r){return r.location!==t.location||r.revalidation!=="idle"&&t.revalidation==="idle"?{error:t.error,location:t.location,revalidation:t.revalidation}:{error:t.error||r.error,location:r.location,revalidation:t.revalidation||r.revalidation}}componentDidCatch(t,r){console.error("React Router caught the following error during render",t,r)}render(){return this.state.error?l.createElement(q.Provider,{value:this.props.routeContext},l.createElement(Ke.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function zt(e){let{routeContext:t,match:r,children:n}=e,a=l.useContext(_e);return a&&a.static&&a.staticContext&&(r.route.errorElement||r.route.ErrorBoundary)&&(a.staticContext._deepestRenderedBoundaryId=r.route.id),l.createElement(q.Provider,{value:t},n)}function Bt(e,t,r){var n;if(t===void 0&&(t=[]),r===void 0&&(r=null),e==null){var a;if((a=r)!=null&&a.errors)e=r.matches;else return null}let i=e,s=(n=r)==null?void 0:n.errors;if(s!=null){let o=i.findIndex(u=>u.route.id&&(s==null?void 0:s[u.route.id]));o>=0||S(!1),i=i.slice(0,Math.min(i.length,o+1))}return i.reduceRight((o,u,c)=>{let p=u.route.id?s==null?void 0:s[u.route.id]:null,h=null;r&&(h=u.route.errorElement||kt);let y=t.concat(i.slice(0,c+1)),f=()=>{let x;return p?x=h:u.route.Component?x=l.createElement(u.route.Component,null):u.route.element?x=u.route.element:x=o,l.createElement(zt,{match:u,routeContext:{outlet:o,matches:y,isDataRoute:r!=null},children:x})};return r&&(u.route.ErrorBoundary||u.route.errorElement||c===0)?l.createElement(Mt,{location:r.location,revalidation:r.revalidation,component:h,error:p,children:f(),routeContext:{outlet:null,matches:y,isDataRoute:!0}}):f()},null)}var X;(function(e){e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate"})(X||(X={}));var L;(function(e){e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId"})(L||(L={}));function Ut(e){let t=l.useContext(_e);return t||S(!1),t}function Ot(e){let t=l.useContext(It);return t||S(!1),t}function Ft(e){let t=l.useContext(q);return t||S(!1),t}function Ge(e){let t=Ft(),r=t.matches[t.matches.length-1];return r.route.id||S(!1),r.route.id}function Dt(){var e;let t=l.useContext(Ke),r=Ot(L.UseRouteError),n=Ge(L.UseRouteError);return t||((e=r.errors)==null?void 0:e[n])}function Ht(){let{router:e}=Ut(X.UseNavigateStable),t=Ge(L.UseNavigateStable),r=l.useRef(!1);return We(()=>{r.current=!0}),l.useCallback(function(a,i){i===void 0&&(i={}),r.current&&(typeof a=="number"?e.navigate(a):e.navigate(a,B({fromRouteId:t},i)))},[e,t])}function I(e){S(!1)}function $t(e){let{basename:t="/",children:r=null,location:n,navigationType:a=V.Pop,navigator:i,static:s=!1}=e;$()&&S(!1);let o=t.replace(/^\/*/,"/"),u=l.useMemo(()=>({basename:o,navigator:i,static:s}),[o,i,s]);typeof n=="string"&&(n=C(n));let{pathname:c="/",search:p="",hash:h="",state:y=null,key:f="default"}=n,x=l.useMemo(()=>{let m=He(c,o);return m==null?null:{location:{pathname:m,search:p,hash:h,state:y,key:f},navigationType:a}},[o,c,p,h,y,f,a]);return x==null?null:l.createElement(D.Provider,{value:u},l.createElement(H.Provider,{children:r,value:x}))}function Kt(e){let{children:t,location:r}=e;return Lt(Z(t),r)}var qe;(function(e){e[e.pending=0]="pending",e[e.success=1]="success",e[e.error=2]="error"})(qe||(qe={}));new Promise(()=>{});function Z(e,t){t===void 0&&(t=[]);let r=[];return l.Children.forEach(e,(n,a)=>{if(!l.isValidElement(n))return;let i=[...t,a];if(n.type===l.Fragment){r.push.apply(r,Z(n.props.children,i));return}n.type!==I&&S(!1),!n.props.index||!n.props.children||S(!1);let s={id:n.props.id||i.join("-"),caseSensitive:n.props.caseSensitive,element:n.props.element,Component:n.props.Component,index:n.props.index,path:n.props.path,loader:n.props.loader,action:n.props.action,errorElement:n.props.errorElement,ErrorBoundary:n.props.ErrorBoundary,hasErrorBoundary:n.props.ErrorBoundary!=null||n.props.errorElement!=null,shouldRevalidate:n.props.shouldRevalidate,handle:n.props.handle,lazy:n.props.lazy};n.props.children&&(s.children=Z(n.props.children,i)),r.push(s)}),r}/**
 * React Router DOM v6.14.1
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function ee(e){return e===void 0&&(e=""),new URLSearchParams(typeof e=="string"||Array.isArray(e)||e instanceof URLSearchParams?e:Object.keys(e).reduce((t,r)=>{let n=e[r];return t.concat(Array.isArray(n)?n.map(a=>[r,a]):[[r,n]])},[]))}function Wt(e,t){let r=ee(e);if(t)for(let n of t.keys())r.has(n)||t.getAll(n).forEach(a=>{r.append(n,a)});return r}const Gt="startTransition",Ie=Qe[Gt];function Yt(e){let{basename:t,children:r,future:n,window:a}=e,i=l.useRef();i.current==null&&(i.current=at({window:a,v5Compat:!0}));let s=i.current,[o,u]=l.useState({action:s.action,location:s.location}),{v7_startTransition:c}=n||{},p=l.useCallback(h=>{c&&Ie?Ie(()=>u(h)):u(h)},[u,c]);return l.useLayoutEffect(()=>s.listen(p),[s,p]),l.createElement($t,{basename:t,children:r,location:o.location,navigationType:o.action,navigator:s})}var Ne;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher"})(Ne||(Ne={}));var Le;(function(e){e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"})(Le||(Le={}));function we(e){let t=l.useRef(ee(e)),r=l.useRef(!1),n=Ve(),a=l.useMemo(()=>Wt(n.search,r.current?null:t.current),[n.search]),i=K(),s=l.useCallback((o,u)=>{const c=ee(typeof o=="function"?o(a):o);r.current=!0,i("?"+c,u)},[i,a]);return[a,s]}const J=()=>{},P=e=>{if(e==null)return"?.?";const{x:t,y:r}=e;return`${t}.${r}`},W=(e,t)=>`${t??"b"}-${e.x}-${e.y}`,te=e=>{const[t]=we();return parseInt(t.get("n")??e,10)},re=e=>{const[t]=we();return parseInt(t.get("m")??e,10)},Jt=()=>{const[e]=we(),t=parseInt(e.get("x")??"-1",10),r=parseInt(e.get("y")??"-1",10);return t===-1||r===-1?null:{x:t,y:r}},ne=e=>{const t=[];if(e==null)return t;for(let r=1;r<=e;r++)for(let n=1;n<=e;n++)t.push({x:r,y:n});return t},ae=e=>{const t=[];for(let r=1;r<=e;r++){const n=[];for(let a=1;a<=e;a++){const i={x:r,y:a};n.push(W(i))}t.push(`'${n.join(" ")}'`)}return t.join(" ")},Qt=()=>{const e=Jt(),t=te("10"),r=re("10"),[n,a]=l.useState(t),[i,s]=l.useState(r),[o,u]=l.useState(()=>[e??U(n)]);l.useEffect(()=>{const b=U(n);u([e??b])},[n]);const c=l.useMemo(()=>60,[]),p=l.useMemo(()=>c*n,[n,c]),h=l.useMemo(()=>{const b=o.length-1;if(!(b<0))return o[b]},[o]),y=l.useMemo(()=>{const b=new Map;if(h==null)return b;const v=[...o,h].reduce((_,A)=>{const j=P(A);return _.set(j,A),_},new Map),{x:R,y:w}=h;for(let _=Math.max(1,R-1);_<=Math.min(n,R+1);_++)for(let A=Math.max(1,w-1);A<=Math.min(n,w+1);A++){const j={x:_,y:A},Te=P(j);v.has(Te)||b.set(Te,j)}return b},[n,h,o]),f=l.useMemo(()=>i-o.length,[o,i]),x=l.useMemo(()=>f===0,[f]),m=l.useMemo(()=>ne(n),[n]),g=l.useMemo(()=>ae(n),[n]);return{size:n,setSize:a,maxSteps:i,setMaxSteps:s,selectedSteps:o,setSelectedSteps:u,lastSelectedStep:h,lastSelectedStepAdjacentSteps:y,remainingStep:f,nxn:m,nxnGridArea:g,isDone:x,sizeChess:p,sizeBlock:c}},G=()=>l.useContext(Je),Xt=()=>{const e=G();l.useEffect(()=>{const t=M(e,"ArrowUp",({x:i})=>({x:i-1})),r=M(e,"ArrowDown",({x:i})=>({x:i+1})),n=M(e,"ArrowLeft",({y:i})=>({y:i-1})),a=M(e,"ArrowRight",({y:i})=>({y:i+1}));return window.addEventListener("keydown",t),window.addEventListener("keydown",r),window.addEventListener("keydown",n),window.addEventListener("keydown",a),()=>{window.removeEventListener("keydown",t),window.removeEventListener("keydown",r),window.removeEventListener("keydown",n),window.removeEventListener("keydown",a)}},[e])},U=e=>({x:Math.ceil(Math.random()*e),y:Math.ceil(Math.random()*e)}),ie=e=>{const{position:t,steps:r}=e,{x:n,y:a}=t;return r.findIndex(i=>i.x===n&&i.y===a)},Pe=(e,t)=>e==null||t==null?!1:e.x===t.x&&e.y===t.y,Ye=(e,t)=>{if(e==null||t==null)return!1;const r=Math.abs(e.x-t.x),n=Math.abs(e.y-t.y);return Math.max(r,n)<=1},se=e=>{const{chess:t,position:r}=e,{lastSelectedStep:n,setSelectedSteps:a,maxSteps:i,selectedSteps:s}=t;if(i!==s.length)if(n==null){a([r]);return}else Ye(r,n)&&a(u=>[...u,r])},oe=e=>{const{chess:t,position:r}=e,{selectedSteps:n,setSelectedSteps:a,lastSelectedStep:i}=t;if(i==null||i.x!==r.x||i.y!==r.y)return;const s=[...n];s.pop(),a(s)},Zt={size:0,setSize:J,maxSteps:0,setMaxSteps:J,selectedSteps:[],setSelectedSteps:J,nxn:[],isDone:!1,lastSelectedStep:void 0,lastSelectedStepAdjacentSteps:new Map,sizeChess:0,sizeBlock:0,remainingStep:0,nxnGridArea:""},Je=l.createContext(Zt),le=e=>{const t=Qt();return d.jsx(Je.Provider,{value:t,children:d.jsx(d.Fragment,{children:e.children})})},ue=e=>{const{position:t,sizeBlock:r}=e;return{backgroundColor:"yellow",width:`${r}px`,height:`${r}px`,display:"grid",placeContent:"center center",gridArea:`b-${t.x}-${t.y}`,zIndex:1}},je=e=>{if(e==null||e==="")throw new Error("attribute must be no empty string");const t=e.match(/.*_\D+(\d+)-(\d+)/);if(t==null)throw new Error(`${e} does not have position index`);const[r,n,a]=t;return{x:parseInt(n,10),y:parseInt(a,10)}},er={root:e=>`CHESS_SELECTED_BLOCK_${W(e,"sb")}`,selectedBlocks:/CHESS_SELECTED_BLOCK_/},ce=e=>{const{position:t,chess:r}=e,n=e.dataTestid??er.root(t),{sizeBlock:a,selectedSteps:i}=r,s=l.useMemo(()=>{const u=ie({position:t,steps:i});return u===-1?null:u+1},[t,i]),o=l.useMemo(()=>({...ue({sizeBlock:a,position:t}),...e.style??{}}),[a,t,e.style]);return d.jsx("div",{"data-testid":n,style:o,onClick:()=>oe({chess:r,position:t}),children:d.jsx(d.Fragment,{children:s})})},de=l.memo(ce,e=>{const{chess:{lastSelectedStep:t},position:r}=e;return Ye(t,r)}),pe=e=>{const{chess:t}=e,{selectedSteps:r}=t;return d.jsx(d.Fragment,{children:r.map((n,a)=>d.jsx(de,{position:n,chess:t},a))})},tr=(e,t)=>({backgroundColor:`${(e.x+e.y)%2===1?"white":"lightgrey"}`,width:`${t}px`,height:`${t}px`,display:"grid",placeContent:"center center",gridArea:`b-${e.x}-${e.y}`}),rr={root:e=>`CHESS_BLOCK_${W(e)}`,blocks:/CHESS_BLOCK_/},he=e=>{const{position:t,chess:r}=e,n=e.dataTestid??rr.root(t),{sizeBlock:a}=r,i=l.useMemo(()=>({...tr(t,a),...e.style??{}}),[t,a,e.style]);return d.jsx("div",{"data-testid":n,style:i,onClick:()=>{se({chess:r,position:t})}})},me=l.memo(he,(e,t)=>{const{chess:{lastSelectedStepAdjacentSteps:r},position:n}=t;return!r.has(P(n))}),ge=e=>{const{chess:t}=e,{nxn:r}=t;return d.jsx(d.Fragment,{children:r.map((n,a)=>d.jsx(me,{position:n,chess:t},a))})},ke={root:"CHESS_SELECTED_STEPS",selectedStepLI:e=>`CHESS_SELECTED_STEPS_${W(e)}`,selectedStepLIRegexp:/CHESS_SELECTED_STEPS_/},fe=e=>{const{dataTestid:t=ke.root}=e,{selectedSteps:r}=G();return d.jsx("ol",{"data-testid":t,children:r.map((n,a)=>d.jsxs("li",{"data-testid":ke.selectedStepLI(n),children:["(",n.x,", ",n.y,")"]},a))})},nr=(e,t)=>{const{setSize:r}=t;let n;try{n=parseInt(e.target.value,10)}catch{n=0}r(n)},ar=(e,t)=>{const{setMaxSteps:r}=t;let n;try{n=parseInt(e.target.value,10)}catch{n=0}r(n)},ir={display:"grid",gridTemplateColumns:"repeat(2, 1fr)",gridTemplateRows:"repeat(3, 1fr)",gridTemplateAreas:["'size_label size_input'","'max_steps_label max_steps_input'","'next next'"].join(" "),gap:"10px"},sr={gridArea:"size_label",placeSelf:"center start"},or={gridArea:"size_input"},lr={gridArea:"max_steps_label",placeSelf:"center start"},ur={gridArea:"max_steps_input"},cr={gridArea:"next"},k={root:"CHESS_SETUP",size:"CHESS_SETUP_SIZE",maxSteps:"CHESS_SETUP_MAX_STEPS",next:"CHESS_SETUP_NEXT"},be=e=>{const{dataTestid:t=k.root}=e,r=G(),{size:n,maxSteps:a}=r,i=K();return d.jsxs("div",{"data-testid":t,style:ir,children:[d.jsx("div",{style:sr,children:"Chess Board Size (nxn)"}),d.jsx("input",{"data-testid":k.size,style:or,placeholder:"size (nxn)",type:"number",value:n??0,onChange:s=>nr(s,r)}),d.jsx("div",{style:lr,children:"Number of available steps"}),d.jsx("input",{"data-testid":k.maxSteps,style:ur,placeholder:"max steps",type:"number",value:a,onChange:s=>ar(s,r)}),d.jsx("button",{"data-testid":k.next,style:cr,role:"button",disabled:n<=0||a<=0,onClick:()=>{i("/play")},children:"Next"})]})},dr={display:"grid",gridTemplateColumns:"repeat(3, 1fr)",alignItems:"center"},ye=e=>({border:"1px solid lightgrey",display:"grid",gridTemplateColumns:`repeat(${e.size}, 1fr)`,gridTemplateRows:`repeat(${e.size}, 1fr)`,gridTemplateAreas:e.nxnGridArea,gap:0,width:`${e.sizeChess}px`,height:`${e.sizeChess}px`,margin:"0 auto"}),Se=e=>{const{chess:t}=e,{size:r,sizeChess:n,nxnGridArea:a}=t,i=e.dataTestid??E.board,s=e.style??ye({size:r,sizeChess:n,nxnGridArea:a});return d.jsx("div",{style:s,"data-testid":i,children:e.children??null})},M=(e,t,r)=>n=>{const{lastSelectedStep:a,size:i,setSelectedSteps:s,selectedSteps:o,remainingStep:u}=e;if(n.key!==t||a==null)return;const c={...a,...r(a)},{x:p,y:h}=c;if(p<=0||h<=0||i<p||i<h)return;const y=o.at(-2);Pe(y,c)&&s(f=>f.filter((x,m)=>m!==f.length-1)),u!==0&&o.every(f=>!Pe(f,c))&&s(f=>[...f,c])},E={root:"CHESS_PLAY",back:"CHESS_BACK",next:"CHESS_NEXT",remainingStep:"CHESS_REMAINING_STEP",board:"CHESS_BOARD"},O=e=>{const{dataTestid:t=E.root}=e,r=K(),n=G(),{remainingStep:a,isDone:i,maxSteps:s}=n;return Xt(),d.jsxs("div",{style:{width:"100%"},"data-testid":t,children:[d.jsxs("div",{style:dr,children:[d.jsx("div",{children:d.jsx("button",{role:"button","data-testid":E.back,onClick:()=>{r("/setup")},children:"Back"})}),d.jsx("div",{children:d.jsx("button",{role:"button",disabled:!i,"data-testid":E.next,onClick:()=>{r("/thankyou")},children:"Next"})}),d.jsxs("div",{"data-testid":E.remainingStep,children:["Steps left: ",a,"/",s]})]}),d.jsxs(Se,{chess:n,dataTestid:E.board,children:[d.jsx(ge,{chess:n}),d.jsx(pe,{chess:n})]})]})},pr={display:"grid",gridTemplateColumns:"repeat(2, 1fr)",width:"100%"},z={root:"CHESS_THANKYOU",selectedStepOL:"CHESS_THANKYOU_SELECTED_STEPS",back:"CHESS_THANKYOU_BACK",startOver:"CHESS_THANKYOU_STARTOVER"},xe=e=>{const{dataTestid:t=z.root}=e,r=K();return d.jsxs("div",{"data-testid":t,children:[d.jsxs("div",{children:[d.jsx("h2",{children:"Thank you! Your Steps"}),d.jsx(fe,{dataTestid:z.selectedStepOL})]}),d.jsxs("div",{style:pr,children:[d.jsx("div",{children:d.jsx("button",{"data-testid":z.back,role:"button",onClick:()=>{r("/play")},children:"Back"})}),d.jsx("div",{children:d.jsx("button",{"data-testid":z.startOver,role:"button",onClick:()=>{r("/setup")},children:"START OVER"})})]})]})},Me=()=>d.jsx(Yt,{basename:"/",children:d.jsx(le,{children:d.jsxs(Kt,{children:[d.jsx(I,{Component:be,path:"setup"}),d.jsx(I,{Component:O,path:"play?size"}),d.jsx(I,{Component:xe,path:"thankyou"}),d.jsx(I,{Component:O,path:"*"})]})})}),ze=e=>{const{isProd:t}=e;return t?d.jsx(Me,{}):d.jsx(l.StrictMode,{children:d.jsx(Me,{})})};try{P.displayName="getPositionKey",P.__docgenInfo={description:"",displayName:"getPositionKey",props:{x:{defaultValue:null,description:"",name:"x",required:!0,type:{name:"number"}},y:{defaultValue:null,description:"",name:"y",required:!0,type:{name:"number"}}}}}catch{}try{te.displayName="useSizeQueryParam",te.__docgenInfo={description:"",displayName:"useSizeQueryParam",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:`Returns the character at the specified index.
@param pos The zero-based index of the desired character.`,name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:`Returns the Unicode value of the character at the specified location.
@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.`,name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:`Returns a string that contains the concatenation of two or more strings.
@param strings The strings to append to the end of the string.`,name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:`Returns the position of the first occurrence of a substring.
@param searchString The substring to search for in the string
@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.`,name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:`Returns the last occurrence of a substring in the string.
@param searchString The substring to search for.
@param position The index at which to begin searching. If omitted, the search begins at the end of the string.`,name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:`Determines whether two strings are equivalent in the current locale.
Determines whether two strings are equivalent in the current or specified locale.
@param that String to compare to target string
@param that String to compare to target string
@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.
@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.`,name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:`Matches a string with a regular expression, and returns an array containing the results of that search.
Matches a string or an object that supports being matched against, and returns an array
containing the results of that search, or null if no matches are found.
@param regexp A variable name or string literal containing the regular expression pattern and flags.
@param matcher An object that supports being matched against.`,name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:`Replaces text in a string, using a regular expression or search string.
Passes a string and {@linkcode replaceValue} to the \`[Symbol.replace]\` method on {@linkcode searchValue}. This method is expected to implement its own replacement algorithm.
Replaces text in a string, using an object that supports replacement within a string.
@param searchValue A string or regular expression to search for.
@param replaceValue A string containing the text to replace. When the {@linkcode searchValue } is a \`RegExp\`, all matches are replaced if the \`g\` flag is set (or only those matches at the beginning, if the \`y\` flag is also present). Otherwise, only the first match of {@linkcode searchValue } is replaced.
@param searchValue A string to search for.
@param replacer A function that returns the replacement text.
@param searchValue An object that supports searching for and replacing matches within a string.
@param replaceValue The replacement text.
@param searchValue A object can search for and replace matches within a string.
@param replacer A function that returns the replacement text.`,name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"}},search:{defaultValue:null,description:`Finds the first substring match in a regular expression search.
@param regexp The regular expression pattern and applicable flags.
@param searcher An object which supports searching within a string.`,name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:`Returns a section of a string.
@param start The index to the beginning of the specified portion of stringObj.
@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.
If this value is not specified, the substring continues to the end of stringObj.`,name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:`Split a string into substrings using the specified separator and return them as an array.
@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.
@param limit A value used to limit the number of elements returned in the array.
@param splitter An object that can split a string.
@param limit A value used to limit the number of elements returned in the array.`,name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:`Returns the substring at the specified location within a String object.
@param start The zero-based index number indicating the beginning of the substring.
@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.
If end is omitted, the characters from start through the end of the original string are returned.`,name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:`Gets a substring beginning at the specified location and having the specified length.
@deprecated A legacy feature for browser compatibility
@param from The starting position of the desired substring. The index of the first character in the string is zero.
@param length The number of characters to include in the returned substring.`,name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:`Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point
value of the UTF-16 encoded code point starting at the string element at position pos in
the String resulting from converting this object to a String.
If there is no element at that position, the result is undefined.
If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.`,name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:`Returns true if searchString appears as a substring of the result of converting this
object to a String, at one or more positions that are
greater than or equal to position; otherwise, returns false.
@param searchString search string
@param position If position is undefined, 0 is assumed, so as to search all of the String.`,name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:`Returns true if the sequence of elements of searchString converted to a String is the
same as the corresponding elements of this object (converted to a String) starting at
endPosition – length(this). Otherwise returns false.`,name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:`Returns the String value result of normalizing the string into the normalization form
named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.
@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default
is "NFC"
@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default
is "NFC"`,name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:`Returns a String value that is made from count copies appended together. If count is 0,
the empty string is returned.
@param count number of copies to append`,name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:`Returns true if the sequence of elements of searchString converted to a String is the
same as the corresponding elements of this object (converted to a String) starting at
position. Otherwise returns false.`,name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an `<a>` HTML anchor element and sets the name attribute to the text value\n@deprecated A legacy feature for browser compatibility\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a `<big>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a `<blink>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a `<b>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a `<tt>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a `<font>` HTML element and sets the color attribute value\n@deprecated A legacy feature for browser compatibility",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a `<font>` HTML element and sets the size attribute value\n@deprecated A legacy feature for browser compatibility\n@deprecated A legacy feature for browser compatibility",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an `<i>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an `<a>` HTML element and sets the href attribute value\n@deprecated A legacy feature for browser compatibility",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a `<small>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a `<strike>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a `<sub>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a `<sup>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"sup",required:!0,type:{name:"() => string"}},padStart:{defaultValue:null,description:`Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.
The padding is applied from the start (left) of the current string.
@param maxLength The length of the resulting string once the current string has been padded.
If this parameter is smaller than the current string's length, the current string will be returned as it is.
@param fillString The string to pad the current string with.
If this string is too long, it will be truncated and the left-most part will be applied.
The default value for this parameter is " " (U+0020).`,name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:`Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.
The padding is applied from the end (right) of the current string.
@param maxLength The length of the resulting string once the current string has been padded.
If this parameter is smaller than the current string's length, the current string will be returned as it is.
@param fillString The string to pad the current string with.
If this string is too long, it will be truncated and the left-most part will be applied.
The default value for this parameter is " " (U+0020).`,name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimEnd:{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.",name:"trimEnd",required:!0,type:{name:"() => string"}},trimStart:{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.",name:"trimStart",required:!0,type:{name:"() => string"}},trimLeft:{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.\n@deprecated A legacy feature for browser compatibility. Use `trimStart` instead",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.\n@deprecated A legacy feature for browser compatibility. Use `trimEnd` instead",name:"trimRight",required:!0,type:{name:"() => string"}},matchAll:{defaultValue:null,description:`Matches a string with a regular expression, and returns an iterable of matches
containing the results of that search.
@param regexp A variable name or string literal containing the regular expression pattern and flags.`,name:"matchAll",required:!0,type:{name:"(regexp: RegExp) => IterableIterator<RegExpMatchArray>"}},replaceAll:{defaultValue:null,description:`Replace all instances of a substring in a string, using a regular expression or search string.
@param searchValue A string to search for.
@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.
@param searchValue A string to search for.
@param replacer A function that returns the replacement text.`,name:"replaceAll",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; }"}},at:{defaultValue:null,description:`Returns a new String consisting of the single UTF-16 code unit located at the specified index.
@param index The zero-based index of the desired code unit. A negative index will count back from the last item.`,name:"at",required:!0,type:{name:"(index: number) => string"}},"__@iterator@33":{defaultValue:null,description:"Iterator",name:"__@iterator@33",required:!0,type:{name:"() => IterableIterator<string>"}}}}}catch{}try{re.displayName="useMaxStepsQueryParam",re.__docgenInfo={description:"",displayName:"useMaxStepsQueryParam",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:`Returns the character at the specified index.
@param pos The zero-based index of the desired character.`,name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:`Returns the Unicode value of the character at the specified location.
@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.`,name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:`Returns a string that contains the concatenation of two or more strings.
@param strings The strings to append to the end of the string.`,name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:`Returns the position of the first occurrence of a substring.
@param searchString The substring to search for in the string
@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.`,name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:`Returns the last occurrence of a substring in the string.
@param searchString The substring to search for.
@param position The index at which to begin searching. If omitted, the search begins at the end of the string.`,name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:`Determines whether two strings are equivalent in the current locale.
Determines whether two strings are equivalent in the current or specified locale.
@param that String to compare to target string
@param that String to compare to target string
@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.
@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.`,name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:`Matches a string with a regular expression, and returns an array containing the results of that search.
Matches a string or an object that supports being matched against, and returns an array
containing the results of that search, or null if no matches are found.
@param regexp A variable name or string literal containing the regular expression pattern and flags.
@param matcher An object that supports being matched against.`,name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:`Replaces text in a string, using a regular expression or search string.
Passes a string and {@linkcode replaceValue} to the \`[Symbol.replace]\` method on {@linkcode searchValue}. This method is expected to implement its own replacement algorithm.
Replaces text in a string, using an object that supports replacement within a string.
@param searchValue A string or regular expression to search for.
@param replaceValue A string containing the text to replace. When the {@linkcode searchValue } is a \`RegExp\`, all matches are replaced if the \`g\` flag is set (or only those matches at the beginning, if the \`y\` flag is also present). Otherwise, only the first match of {@linkcode searchValue } is replaced.
@param searchValue A string to search for.
@param replacer A function that returns the replacement text.
@param searchValue An object that supports searching for and replacing matches within a string.
@param replaceValue The replacement text.
@param searchValue A object can search for and replace matches within a string.
@param replacer A function that returns the replacement text.`,name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"}},search:{defaultValue:null,description:`Finds the first substring match in a regular expression search.
@param regexp The regular expression pattern and applicable flags.
@param searcher An object which supports searching within a string.`,name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:`Returns a section of a string.
@param start The index to the beginning of the specified portion of stringObj.
@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.
If this value is not specified, the substring continues to the end of stringObj.`,name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:`Split a string into substrings using the specified separator and return them as an array.
@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.
@param limit A value used to limit the number of elements returned in the array.
@param splitter An object that can split a string.
@param limit A value used to limit the number of elements returned in the array.`,name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:`Returns the substring at the specified location within a String object.
@param start The zero-based index number indicating the beginning of the substring.
@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.
If end is omitted, the characters from start through the end of the original string are returned.`,name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:`Gets a substring beginning at the specified location and having the specified length.
@deprecated A legacy feature for browser compatibility
@param from The starting position of the desired substring. The index of the first character in the string is zero.
@param length The number of characters to include in the returned substring.`,name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:`Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point
value of the UTF-16 encoded code point starting at the string element at position pos in
the String resulting from converting this object to a String.
If there is no element at that position, the result is undefined.
If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.`,name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:`Returns true if searchString appears as a substring of the result of converting this
object to a String, at one or more positions that are
greater than or equal to position; otherwise, returns false.
@param searchString search string
@param position If position is undefined, 0 is assumed, so as to search all of the String.`,name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:`Returns true if the sequence of elements of searchString converted to a String is the
same as the corresponding elements of this object (converted to a String) starting at
endPosition – length(this). Otherwise returns false.`,name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:`Returns the String value result of normalizing the string into the normalization form
named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.
@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default
is "NFC"
@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default
is "NFC"`,name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:`Returns a String value that is made from count copies appended together. If count is 0,
the empty string is returned.
@param count number of copies to append`,name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:`Returns true if the sequence of elements of searchString converted to a String is the
same as the corresponding elements of this object (converted to a String) starting at
position. Otherwise returns false.`,name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an `<a>` HTML anchor element and sets the name attribute to the text value\n@deprecated A legacy feature for browser compatibility\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a `<big>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a `<blink>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a `<b>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a `<tt>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a `<font>` HTML element and sets the color attribute value\n@deprecated A legacy feature for browser compatibility",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a `<font>` HTML element and sets the size attribute value\n@deprecated A legacy feature for browser compatibility\n@deprecated A legacy feature for browser compatibility",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an `<i>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an `<a>` HTML element and sets the href attribute value\n@deprecated A legacy feature for browser compatibility",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a `<small>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a `<strike>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a `<sub>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a `<sup>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"sup",required:!0,type:{name:"() => string"}},padStart:{defaultValue:null,description:`Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.
The padding is applied from the start (left) of the current string.
@param maxLength The length of the resulting string once the current string has been padded.
If this parameter is smaller than the current string's length, the current string will be returned as it is.
@param fillString The string to pad the current string with.
If this string is too long, it will be truncated and the left-most part will be applied.
The default value for this parameter is " " (U+0020).`,name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:`Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.
The padding is applied from the end (right) of the current string.
@param maxLength The length of the resulting string once the current string has been padded.
If this parameter is smaller than the current string's length, the current string will be returned as it is.
@param fillString The string to pad the current string with.
If this string is too long, it will be truncated and the left-most part will be applied.
The default value for this parameter is " " (U+0020).`,name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimEnd:{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.",name:"trimEnd",required:!0,type:{name:"() => string"}},trimStart:{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.",name:"trimStart",required:!0,type:{name:"() => string"}},trimLeft:{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.\n@deprecated A legacy feature for browser compatibility. Use `trimStart` instead",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.\n@deprecated A legacy feature for browser compatibility. Use `trimEnd` instead",name:"trimRight",required:!0,type:{name:"() => string"}},matchAll:{defaultValue:null,description:`Matches a string with a regular expression, and returns an iterable of matches
containing the results of that search.
@param regexp A variable name or string literal containing the regular expression pattern and flags.`,name:"matchAll",required:!0,type:{name:"(regexp: RegExp) => IterableIterator<RegExpMatchArray>"}},replaceAll:{defaultValue:null,description:`Replace all instances of a substring in a string, using a regular expression or search string.
@param searchValue A string to search for.
@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.
@param searchValue A string to search for.
@param replacer A function that returns the replacement text.`,name:"replaceAll",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; }"}},at:{defaultValue:null,description:`Returns a new String consisting of the single UTF-16 code unit located at the specified index.
@param index The zero-based index of the desired code unit. A negative index will count back from the last item.`,name:"at",required:!0,type:{name:"(index: number) => string"}},"__@iterator@33":{defaultValue:null,description:"Iterator",name:"__@iterator@33",required:!0,type:{name:"() => IterableIterator<string>"}}}}}catch{}try{ne.displayName="getNxN",ne.__docgenInfo={description:"",displayName:"getNxN",props:{toString:{defaultValue:null,description:`Returns a string representation of an object.
@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.`,name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:`Returns a string representing a number in fixed-point notation.
@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.`,name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:`Returns a string containing a number represented in exponential notation.
@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.`,name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:`Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.
@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.`,name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:`Converts a number to a string by using the current or specified locale.
@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.
@param options An object that contains one or more properties that specify comparison options.
@param locales A locale string, array of locale strings, Intl.Locale object, or array of Intl.Locale objects that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.
@param options An object that contains one or more properties that specify comparison options.`,name:"toLocaleString",required:!1,type:{name:"{ (locales?: string | string[], options?: NumberFormatOptions): string; (locales?: LocalesArgument, options?: NumberFormatOptions): string; }"}}}}}catch{}try{ae.displayName="getNxNGridArea",ae.__docgenInfo={description:"",displayName:"getNxNGridArea",props:{toString:{defaultValue:null,description:`Returns a string representation of an object.
@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.`,name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:`Returns a string representing a number in fixed-point notation.
@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.`,name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:`Returns a string containing a number represented in exponential notation.
@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.`,name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:`Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.
@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.`,name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:`Converts a number to a string by using the current or specified locale.
@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.
@param options An object that contains one or more properties that specify comparison options.
@param locales A locale string, array of locale strings, Intl.Locale object, or array of Intl.Locale objects that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.
@param options An object that contains one or more properties that specify comparison options.`,name:"toLocaleString",required:!1,type:{name:"{ (locales?: string | string[], options?: NumberFormatOptions): string; (locales?: LocalesArgument, options?: NumberFormatOptions): string; }"}}}}}catch{}try{U.displayName="getRandomBlock",U.__docgenInfo={description:"",displayName:"getRandomBlock",props:{toString:{defaultValue:null,description:`Returns a string representation of an object.
@param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.`,name:"toString",required:!1,type:{name:"(radix?: number) => string"}},toFixed:{defaultValue:null,description:`Returns a string representing a number in fixed-point notation.
@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.`,name:"toFixed",required:!0,type:{name:"(fractionDigits?: number) => string"}},toExponential:{defaultValue:null,description:`Returns a string containing a number represented in exponential notation.
@param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.`,name:"toExponential",required:!0,type:{name:"(fractionDigits?: number) => string"}},toPrecision:{defaultValue:null,description:`Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.
@param precision Number of significant digits. Must be in the range 1 - 21, inclusive.`,name:"toPrecision",required:!0,type:{name:"(precision?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => number"}},toLocaleString:{defaultValue:null,description:`Converts a number to a string by using the current or specified locale.
@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.
@param options An object that contains one or more properties that specify comparison options.
@param locales A locale string, array of locale strings, Intl.Locale object, or array of Intl.Locale objects that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.
@param options An object that contains one or more properties that specify comparison options.`,name:"toLocaleString",required:!1,type:{name:"{ (locales?: string | string[], options?: NumberFormatOptions): string; (locales?: LocalesArgument, options?: NumberFormatOptions): string; }"}}}}}catch{}try{ie.displayName="getBlockSelectedIndex",ie.__docgenInfo={description:"",displayName:"getBlockSelectedIndex",props:{position:{defaultValue:null,description:"",name:"position",required:!0,type:{name:"Position"}},steps:{defaultValue:null,description:"",name:"steps",required:!0,type:{name:"Position[]"}}}}}catch{}try{se.displayName="selectBlock",se.__docgenInfo={description:"",displayName:"selectBlock",props:{chess:{defaultValue:null,description:"",name:"chess",required:!0,type:{name:"{ size: number; setSize: Dispatch<SetStateAction<number>>; maxSteps: number; setMaxSteps: Dispatch<SetStateAction<number>>; ... 9 more ...; sizeBlock: number; }"}},position:{defaultValue:null,description:"",name:"position",required:!0,type:{name:"Position"}}}}}catch{}try{oe.displayName="unselectBlock",oe.__docgenInfo={description:"",displayName:"unselectBlock",props:{chess:{defaultValue:null,description:"",name:"chess",required:!0,type:{name:"{ size: number; setSize: Dispatch<SetStateAction<number>>; maxSteps: number; setMaxSteps: Dispatch<SetStateAction<number>>; ... 9 more ...; sizeBlock: number; }"}},position:{defaultValue:null,description:"",name:"position",required:!0,type:{name:"Position"}}}}}catch{}try{le.displayName="ChessProvider",le.__docgenInfo={description:"",displayName:"ChessProvider",props:{}}}catch{}try{ue.displayName="selectedBlockStyle",ue.__docgenInfo={description:"",displayName:"selectedBlockStyle",props:{position:{defaultValue:null,description:"",name:"position",required:!0,type:{name:"Position"}},sizeBlock:{defaultValue:null,description:"",name:"sizeBlock",required:!0,type:{name:"number"}}}}}catch{}try{je.displayName="getPositionFromBlockPosition",je.__docgenInfo={description:"",displayName:"getPositionFromBlockPosition",props:{toString:{defaultValue:null,description:"Returns a string representation of a string.",name:"toString",required:!1,type:{name:"() => string"}},charAt:{defaultValue:null,description:`Returns the character at the specified index.
@param pos The zero-based index of the desired character.`,name:"charAt",required:!0,type:{name:"(pos: number) => string"}},charCodeAt:{defaultValue:null,description:`Returns the Unicode value of the character at the specified location.
@param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.`,name:"charCodeAt",required:!0,type:{name:"(index: number) => number"}},concat:{defaultValue:null,description:`Returns a string that contains the concatenation of two or more strings.
@param strings The strings to append to the end of the string.`,name:"concat",required:!0,type:{name:"(...strings: string[]) => string"}},indexOf:{defaultValue:null,description:`Returns the position of the first occurrence of a substring.
@param searchString The substring to search for in the string
@param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.`,name:"indexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},lastIndexOf:{defaultValue:null,description:`Returns the last occurrence of a substring in the string.
@param searchString The substring to search for.
@param position The index at which to begin searching. If omitted, the search begins at the end of the string.`,name:"lastIndexOf",required:!0,type:{name:"(searchString: string, position?: number) => number"}},localeCompare:{defaultValue:null,description:`Determines whether two strings are equivalent in the current locale.
Determines whether two strings are equivalent in the current or specified locale.
@param that String to compare to target string
@param that String to compare to target string
@param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.
@param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.`,name:"localeCompare",required:!0,type:{name:"{ (that: string): number; (that: string, locales?: string | string[], options?: CollatorOptions): number; }"}},match:{defaultValue:null,description:`Matches a string with a regular expression, and returns an array containing the results of that search.
Matches a string or an object that supports being matched against, and returns an array
containing the results of that search, or null if no matches are found.
@param regexp A variable name or string literal containing the regular expression pattern and flags.
@param matcher An object that supports being matched against.`,name:"match",required:!0,type:{name:"{ (regexp: string | RegExp): RegExpMatchArray; (matcher: { [Symbol.match](string: string): RegExpMatchArray; }): RegExpMatchArray; }"}},replace:{defaultValue:null,description:`Replaces text in a string, using a regular expression or search string.
Passes a string and {@linkcode replaceValue} to the \`[Symbol.replace]\` method on {@linkcode searchValue}. This method is expected to implement its own replacement algorithm.
Replaces text in a string, using an object that supports replacement within a string.
@param searchValue A string or regular expression to search for.
@param replaceValue A string containing the text to replace. When the {@linkcode searchValue } is a \`RegExp\`, all matches are replaced if the \`g\` flag is set (or only those matches at the beginning, if the \`y\` flag is also present). Otherwise, only the first match of {@linkcode searchValue } is replaced.
@param searchValue A string to search for.
@param replacer A function that returns the replacement text.
@param searchValue An object that supports searching for and replacing matches within a string.
@param replaceValue The replacement text.
@param searchValue A object can search for and replace matches within a string.
@param replacer A function that returns the replacement text.`,name:"replace",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; (searchValue: { ...; }, replaceValue: string): string; (searchValue: { ...; }, replacer: (substring: string, ...args: any[]) => string): string; }"}},search:{defaultValue:null,description:`Finds the first substring match in a regular expression search.
@param regexp The regular expression pattern and applicable flags.
@param searcher An object which supports searching within a string.`,name:"search",required:!0,type:{name:"{ (regexp: string | RegExp): number; (searcher: { [Symbol.search](string: string): number; }): number; }"}},slice:{defaultValue:null,description:`Returns a section of a string.
@param start The index to the beginning of the specified portion of stringObj.
@param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.
If this value is not specified, the substring continues to the end of stringObj.`,name:"slice",required:!0,type:{name:"(start?: number, end?: number) => string"}},split:{defaultValue:null,description:`Split a string into substrings using the specified separator and return them as an array.
@param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.
@param limit A value used to limit the number of elements returned in the array.
@param splitter An object that can split a string.
@param limit A value used to limit the number of elements returned in the array.`,name:"split",required:!0,type:{name:"{ (separator: string | RegExp, limit?: number): string[]; (splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[]; }"}},substring:{defaultValue:null,description:`Returns the substring at the specified location within a String object.
@param start The zero-based index number indicating the beginning of the substring.
@param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.
If end is omitted, the characters from start through the end of the original string are returned.`,name:"substring",required:!0,type:{name:"(start: number, end?: number) => string"}},toLowerCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to lowercase.",name:"toLowerCase",required:!0,type:{name:"() => string"}},toLocaleLowerCase:{defaultValue:null,description:"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale.",name:"toLocaleLowerCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},toUpperCase:{defaultValue:null,description:"Converts all the alphabetic characters in a string to uppercase.",name:"toUpperCase",required:!0,type:{name:"() => string"}},toLocaleUpperCase:{defaultValue:null,description:"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale.",name:"toLocaleUpperCase",required:!0,type:{name:"(locales?: string | string[]) => string"}},trim:{defaultValue:null,description:"Removes the leading and trailing white space and line terminator characters from a string.",name:"trim",required:!0,type:{name:"() => string"}},length:{defaultValue:null,description:"Returns the length of a String object.",name:"length",required:!0,type:{name:"number"}},substr:{defaultValue:null,description:`Gets a substring beginning at the specified location and having the specified length.
@deprecated A legacy feature for browser compatibility
@param from The starting position of the desired substring. The index of the first character in the string is zero.
@param length The number of characters to include in the returned substring.`,name:"substr",required:!0,type:{name:"(from: number, length?: number) => string"}},valueOf:{defaultValue:null,description:"Returns the primitive value of the specified object.",name:"valueOf",required:!1,type:{name:"() => string"}},codePointAt:{defaultValue:null,description:`Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point
value of the UTF-16 encoded code point starting at the string element at position pos in
the String resulting from converting this object to a String.
If there is no element at that position, the result is undefined.
If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.`,name:"codePointAt",required:!0,type:{name:"(pos: number) => number"}},includes:{defaultValue:null,description:`Returns true if searchString appears as a substring of the result of converting this
object to a String, at one or more positions that are
greater than or equal to position; otherwise, returns false.
@param searchString search string
@param position If position is undefined, 0 is assumed, so as to search all of the String.`,name:"includes",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},endsWith:{defaultValue:null,description:`Returns true if the sequence of elements of searchString converted to a String is the
same as the corresponding elements of this object (converted to a String) starting at
endPosition – length(this). Otherwise returns false.`,name:"endsWith",required:!0,type:{name:"(searchString: string, endPosition?: number) => boolean"}},normalize:{defaultValue:null,description:`Returns the String value result of normalizing the string into the normalization form
named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.
@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default
is "NFC"
@param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default
is "NFC"`,name:"normalize",required:!0,type:{name:'{ (form: "NFC" | "NFD" | "NFKC" | "NFKD"): string; (form?: string): string; }'}},repeat:{defaultValue:null,description:`Returns a String value that is made from count copies appended together. If count is 0,
the empty string is returned.
@param count number of copies to append`,name:"repeat",required:!0,type:{name:"(count: number) => string"}},startsWith:{defaultValue:null,description:`Returns true if the sequence of elements of searchString converted to a String is the
same as the corresponding elements of this object (converted to a String) starting at
position. Otherwise returns false.`,name:"startsWith",required:!0,type:{name:"(searchString: string, position?: number) => boolean"}},anchor:{defaultValue:null,description:"Returns an `<a>` HTML anchor element and sets the name attribute to the text value\n@deprecated A legacy feature for browser compatibility\n@param name",name:"anchor",required:!0,type:{name:"(name: string) => string"}},big:{defaultValue:null,description:"Returns a `<big>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"big",required:!0,type:{name:"() => string"}},blink:{defaultValue:null,description:"Returns a `<blink>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"blink",required:!0,type:{name:"() => string"}},bold:{defaultValue:null,description:"Returns a `<b>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"bold",required:!0,type:{name:"() => string"}},fixed:{defaultValue:null,description:"Returns a `<tt>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"fixed",required:!0,type:{name:"() => string"}},fontcolor:{defaultValue:null,description:"Returns a `<font>` HTML element and sets the color attribute value\n@deprecated A legacy feature for browser compatibility",name:"fontcolor",required:!0,type:{name:"(color: string) => string"}},fontsize:{defaultValue:null,description:"Returns a `<font>` HTML element and sets the size attribute value\n@deprecated A legacy feature for browser compatibility\n@deprecated A legacy feature for browser compatibility",name:"fontsize",required:!0,type:{name:"{ (size: number): string; (size: string): string; }"}},italics:{defaultValue:null,description:"Returns an `<i>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"italics",required:!0,type:{name:"() => string"}},link:{defaultValue:null,description:"Returns an `<a>` HTML element and sets the href attribute value\n@deprecated A legacy feature for browser compatibility",name:"link",required:!0,type:{name:"(url: string) => string"}},small:{defaultValue:null,description:"Returns a `<small>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"small",required:!0,type:{name:"() => string"}},strike:{defaultValue:null,description:"Returns a `<strike>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"strike",required:!0,type:{name:"() => string"}},sub:{defaultValue:null,description:"Returns a `<sub>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"sub",required:!0,type:{name:"() => string"}},sup:{defaultValue:null,description:"Returns a `<sup>` HTML element\n@deprecated A legacy feature for browser compatibility",name:"sup",required:!0,type:{name:"() => string"}},padStart:{defaultValue:null,description:`Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.
The padding is applied from the start (left) of the current string.
@param maxLength The length of the resulting string once the current string has been padded.
If this parameter is smaller than the current string's length, the current string will be returned as it is.
@param fillString The string to pad the current string with.
If this string is too long, it will be truncated and the left-most part will be applied.
The default value for this parameter is " " (U+0020).`,name:"padStart",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},padEnd:{defaultValue:null,description:`Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.
The padding is applied from the end (right) of the current string.
@param maxLength The length of the resulting string once the current string has been padded.
If this parameter is smaller than the current string's length, the current string will be returned as it is.
@param fillString The string to pad the current string with.
If this string is too long, it will be truncated and the left-most part will be applied.
The default value for this parameter is " " (U+0020).`,name:"padEnd",required:!0,type:{name:"(maxLength: number, fillString?: string) => string"}},trimEnd:{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.",name:"trimEnd",required:!0,type:{name:"() => string"}},trimStart:{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.",name:"trimStart",required:!0,type:{name:"() => string"}},trimLeft:{defaultValue:null,description:"Removes the leading white space and line terminator characters from a string.\n@deprecated A legacy feature for browser compatibility. Use `trimStart` instead",name:"trimLeft",required:!0,type:{name:"() => string"}},trimRight:{defaultValue:null,description:"Removes the trailing white space and line terminator characters from a string.\n@deprecated A legacy feature for browser compatibility. Use `trimEnd` instead",name:"trimRight",required:!0,type:{name:"() => string"}},matchAll:{defaultValue:null,description:`Matches a string with a regular expression, and returns an iterable of matches
containing the results of that search.
@param regexp A variable name or string literal containing the regular expression pattern and flags.`,name:"matchAll",required:!0,type:{name:"(regexp: RegExp) => IterableIterator<RegExpMatchArray>"}},replaceAll:{defaultValue:null,description:`Replace all instances of a substring in a string, using a regular expression or search string.
@param searchValue A string to search for.
@param replaceValue A string containing the text to replace for every successful match of searchValue in this string.
@param searchValue A string to search for.
@param replacer A function that returns the replacement text.`,name:"replaceAll",required:!0,type:{name:"{ (searchValue: string | RegExp, replaceValue: string): string; (searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string; }"}},at:{defaultValue:null,description:`Returns a new String consisting of the single UTF-16 code unit located at the specified index.
@param index The zero-based index of the desired code unit. A negative index will count back from the last item.`,name:"at",required:!0,type:{name:"(index: number) => string"}},"__@iterator@33":{defaultValue:null,description:"Iterator",name:"__@iterator@33",required:!0,type:{name:"() => IterableIterator<string>"}}}}}catch{}try{ce.displayName="SelectedBlock",ce.__docgenInfo={description:"",displayName:"SelectedBlock",props:{dataTestid:{defaultValue:null,description:"",name:"dataTestid",required:!1,type:{name:"string"}},position:{defaultValue:null,description:"",name:"position",required:!0,type:{name:"Position"}},chess:{defaultValue:null,description:"",name:"chess",required:!0,type:{name:"{ size: number; setSize: Dispatch<SetStateAction<number>>; maxSteps: number; setMaxSteps: Dispatch<SetStateAction<number>>; ... 9 more ...; sizeBlock: number; }"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"React.CSSProperties"}}}}}catch{}try{de.displayName="SelectedBlockMemo",de.__docgenInfo={description:"",displayName:"SelectedBlockMemo",props:{dataTestid:{defaultValue:null,description:"",name:"dataTestid",required:!1,type:{name:"string"}},position:{defaultValue:null,description:"",name:"position",required:!0,type:{name:"Position"}},chess:{defaultValue:null,description:"",name:"chess",required:!0,type:{name:"{ size: number; setSize: Dispatch<SetStateAction<number>>; maxSteps: number; setMaxSteps: Dispatch<SetStateAction<number>>; ... 9 more ...; sizeBlock: number; }"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"React.CSSProperties"}}}}}catch{}try{pe.displayName="SelectedBlocks",pe.__docgenInfo={description:"",displayName:"SelectedBlocks",props:{chess:{defaultValue:null,description:"",name:"chess",required:!0,type:{name:"{ size: number; setSize: Dispatch<SetStateAction<number>>; maxSteps: number; setMaxSteps: Dispatch<SetStateAction<number>>; ... 9 more ...; sizeBlock: number; }"}}}}}catch{}try{he.displayName="Block",he.__docgenInfo={description:"",displayName:"Block",props:{dataTestid:{defaultValue:null,description:"",name:"dataTestid",required:!1,type:{name:"string"}},position:{defaultValue:null,description:"",name:"position",required:!0,type:{name:"Position"}},chess:{defaultValue:null,description:"",name:"chess",required:!0,type:{name:"{ size: number; setSize: Dispatch<SetStateAction<number>>; maxSteps: number; setMaxSteps: Dispatch<SetStateAction<number>>; ... 9 more ...; sizeBlock: number; }"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"React.CSSProperties"}}}}}catch{}try{me.displayName="BlockMemo",me.__docgenInfo={description:"",displayName:"BlockMemo",props:{dataTestid:{defaultValue:null,description:"",name:"dataTestid",required:!1,type:{name:"string"}},position:{defaultValue:null,description:"",name:"position",required:!0,type:{name:"Position"}},chess:{defaultValue:null,description:"",name:"chess",required:!0,type:{name:"{ size: number; setSize: Dispatch<SetStateAction<number>>; maxSteps: number; setMaxSteps: Dispatch<SetStateAction<number>>; ... 9 more ...; sizeBlock: number; }"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"React.CSSProperties"}}}}}catch{}try{ge.displayName="Blocks",ge.__docgenInfo={description:"",displayName:"Blocks",props:{chess:{defaultValue:null,description:"",name:"chess",required:!0,type:{name:"{ size: number; setSize: Dispatch<SetStateAction<number>>; maxSteps: number; setMaxSteps: Dispatch<SetStateAction<number>>; ... 9 more ...; sizeBlock: number; }"}}}}}catch{}try{fe.displayName="SelectedSteps",fe.__docgenInfo={description:"",displayName:"SelectedSteps",props:{dataTestid:{defaultValue:null,description:"",name:"dataTestid",required:!1,type:{name:"string"}}}}}catch{}try{be.displayName="Setup",be.__docgenInfo={description:"",displayName:"Setup",props:{dataTestid:{defaultValue:null,description:"",name:"dataTestid",required:!1,type:{name:"string"}}}}}catch{}try{ye.displayName="playBlockGridStyle",ye.__docgenInfo={description:"",displayName:"playBlockGridStyle",props:{size:{defaultValue:null,description:"",name:"size",required:!0,type:{name:"number"}},sizeChess:{defaultValue:null,description:"",name:"sizeChess",required:!0,type:{name:"number"}},nxnGridArea:{defaultValue:null,description:"",name:"nxnGridArea",required:!0,type:{name:"string"}}}}}catch{}try{Se.displayName="PlayBlockGrid",Se.__docgenInfo={description:"",displayName:"PlayBlockGrid",props:{chess:{defaultValue:null,description:"",name:"chess",required:!0,type:{name:"{ size: number; setSize: Dispatch<SetStateAction<number>>; maxSteps: number; setMaxSteps: Dispatch<SetStateAction<number>>; ... 9 more ...; sizeBlock: number; }"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"React.CSSProperties"}},dataTestid:{defaultValue:null,description:"",name:"dataTestid",required:!1,type:{name:"string"}}}}}catch{}try{O.displayName="Play",O.__docgenInfo={description:"",displayName:"Play",props:{dataTestid:{defaultValue:null,description:"",name:"dataTestid",required:!1,type:{name:"string"}}}}}catch{}try{xe.displayName="Thankyou",xe.__docgenInfo={description:"",displayName:"Thankyou",props:{dataTestid:{defaultValue:null,description:"",name:"dataTestid",required:!1,type:{name:"string"}}}}}catch{}try{ze.displayName="App",ze.__docgenInfo={description:"",displayName:"App",props:{isProd:{defaultValue:null,description:"",name:"isProd",required:!0,type:{name:"boolean"}}}}}catch{}export{he as B,ce as S,Zt as U};
//# sourceMappingURL=App-45d89306.js.map
